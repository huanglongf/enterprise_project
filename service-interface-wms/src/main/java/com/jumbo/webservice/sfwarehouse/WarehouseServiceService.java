/*
 * 
 */

package com.jumbo.webservice.sfwarehouse;

import java.io.Serializable;
import java.net.MalformedURLException;
import java.net.URL;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;


/**
 * This class was generated by Apache CXF 2.2.9 Mon Feb 24 14:47:08 CST 2014 Generated source
 * version: 2.2.9
 * 
 */


@WebServiceClient(name = "WarehouseServiceService", wsdlLocation = "http://219.134.187.154:9154/bsp-wms/ws/WarehouseService?wsdl", targetNamespace = "http://service.warehouse.integration.sf.com/")
public class WarehouseServiceService extends Service implements Serializable {

    /**
     * 
     */
    protected static final Logger log = LoggerFactory.getLogger(WarehouseServiceService.class);

    private static final long serialVersionUID = 1451180783759976597L;
    public final static URL WSDL_LOCATION;
    public final static QName SERVICE = new QName("http://service.warehouse.integration.sf.com/", "WarehouseServiceService");
    public final static QName WarehouseServicePort = new QName("http://service.warehouse.integration.sf.com/", "WarehouseServicePort");
    static {
        URL url = null;
        try {
            url = new URL(WarehouseServiceService.class.getResource("/") + "wsdl/sf_wh_3.0.wsdl");
            // url = new URL("http://219.134.187.154:9154/bsp-wms/ws/WarehouseService?wsdl");
        } catch (MalformedURLException e) {
            // System.err.println("Can not initialize the default wsdl from file:WarehouseService.wsdl");
            // e.printStackTrace();
            if (log.isErrorEnabled()) {
                log.error("Can not initialize the default wsdl from file:WarehouseService.wsdlÔºÅ", e);
            }
        }
        WSDL_LOCATION = url;
    }

    public WarehouseServiceService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public WarehouseServiceService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public WarehouseServiceService() {
        super(WSDL_LOCATION, SERVICE);
    }


    /**
     * 
     * @return returns IWarehouseService
     */
    @WebEndpoint(name = "WarehouseServicePort")
    public IWarehouseService getWarehouseServicePort() {
        return super.getPort(WarehouseServicePort, IWarehouseService.class);
    }

    /**
     * 
     * @param features A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.
     *        Supported features not in the <code>features</code> parameter will have their default
     *        values.
     * @return returns IWarehouseService
     */
    @WebEndpoint(name = "WarehouseServicePort")
    public IWarehouseService getWarehouseServicePort(WebServiceFeature... features) {
        return super.getPort(WarehouseServicePort, IWarehouseService.class, features);
    }

}
