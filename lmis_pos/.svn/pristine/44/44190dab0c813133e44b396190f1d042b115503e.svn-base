package com.lmis.pos.common.controller;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletResponse;

import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.multipart.MultipartFile;

import com.alibaba.fastjson.JSON;
import com.lmis.framework.baseInfo.LmisPageObject;
import com.lmis.pos.common.model.PoData;
import com.lmis.pos.common.model.PosPoImportLog;
import com.lmis.pos.common.model.PosPurchaseOrderDetail;
import com.lmis.pos.common.model.PosPurchaseOrderMain;
import com.lmis.pos.common.service.PoDataService;
import com.lmis.pos.common.service.PosPoImportLogService;
import com.lmis.pos.common.service.PosPurchaseOrderDetailService;
import com.lmis.pos.common.service.PosPurchaseOrderMainService;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;

/**
* Title: PoDataController
* Description: Po原始单解析
* Company: baozun
* @author lsh8044
* @date 2018年5月28日
*/
@Api(value = "公共模块-2.1Po原始单")
@RestController
@RequestMapping(value="/poData")
public class PoDataController extends BaseController{
	
	@Resource(name="poDataServiceImpl")
	private PoDataService<PoData> poDataService;

	@Resource(name="posPoImportLogServiceImpl")
	PosPoImportLogService<PosPoImportLog> posPoImportLogService;

	@Resource(name="posPurchaseOrderMainServiceImpl")
	PosPurchaseOrderMainService<PosPurchaseOrderMain> posPurchaseOrderMainService;

	@Resource(name="posPurchaseOrderDetailServiceImpl")
	PosPurchaseOrderDetailService<PosPurchaseOrderDetail> posPurchaseOrderDetailService;
	
	@ApiOperation(value="2.1.1Po原始单Excel文件解析")
	@RequestMapping(value = "/poDataExcelUpload", method = RequestMethod.POST)
    public String poDataExcelUpload(
    		@RequestParam @ApiParam(value="模版id",required=true) String templeteId,
    		@RequestParam @ApiParam(value="上传文件",required=true) MultipartFile file) {
        return JSON.toJSONString(poDataService.poDataExcelUpload(templeteId,file));
    }
	
	@ApiOperation(value="2.1.2上传Excel文件模板获取")
	@RequestMapping(value = "/downLoadTemplete", method = RequestMethod.POST)
    public String downLoadTemplete(
    		@RequestParam @ApiParam(value="模版id",required=true) String templeteId,
    		HttpServletResponse response) throws Exception{
        return JSON.toJSONString(poDataService.downLoadTemplete(templeteId));
    }
	
	@ApiOperation(value="2.1.3Po原始单Excel文件删除接口")
	@RequestMapping(value = "/deleteServiceDataSourceUploadFile", method = RequestMethod.POST)
    public String deleteServiceDataSourceUploadFile(
    		@ApiParam(name="fileId",value="文件id",required=true) String fileId) throws Exception {
		return JSON.toJSONString(poDataService.deleteServiceDataSourceUploadFile(fileId));
    }
	
	@ApiOperation(value="2.1.4Po原始单Excel文件进度轮询接口")
	@RequestMapping(value = "/fileUploadFileSchedule", method = RequestMethod.POST)
    public String fileUploadFileSchedule(
    		@ApiParam(name="fileId",value="文件id",required=true) String fileId) throws Exception {
		return JSON.toJSONString(poDataService.fileUploadFileSchedule(fileId));
    }
	
	@ApiOperation(value="2.1.5Po原始单Excel文件导出")
	@RequestMapping(value = "/poDataExcelDownload", method = RequestMethod.POST)
    public String poDataExcelDownload(
    		@ModelAttribute String fileName,
    		@RequestParam @ApiParam(value="模版id",required=true) String templeteId,
    		@RequestParam @ApiParam(value="过滤条件(json字符串,{field1:'',field2:'',...})",required=true) String filterJsonStr) throws Exception {
		return JSON.toJSONString(poDataService.poDataExcelDownload(templeteId,filterJsonStr,false,fileName));
    }
	
	@ApiOperation(value="2.1.6Po原始单列表记录查询")
	@RequestMapping(value = "/selectPosPurchaseOrderMain", method = RequestMethod.POST)
    public String selectPosPurchaseOrderMain(
    		@ModelAttribute PosPurchaseOrderMain posPurchaseOrderMain, 
    		@ModelAttribute LmisPageObject pageObject) throws Exception {
		pageObject.setDefaultPage(defPageNum, defPageSize);
        return JSON.toJSONString(posPurchaseOrderMainService.selectPosPurchaseOrderMain(posPurchaseOrderMain, pageObject));
    }
	
	@ApiOperation(value="2.1.7Po原始单列表记录单条查看")
	@RequestMapping(value = "/checkPosPurchaseOrderMain", method = RequestMethod.POST)
    public String checkPosPurchaseOrderMain(
    		@ModelAttribute PosPurchaseOrderMain posPurchaseOrderMain) throws Exception {
        return JSON.toJSONString(posPurchaseOrderMainService.checkPosPurchaseOrderMain(posPurchaseOrderMain));
    }
	
	@ApiOperation(value="2.1.8Po原始单列表记录单条删除")
	@RequestMapping(value = "/deletePosPurchaseOrderMain", method = RequestMethod.POST)
    public String deletePosPurchaseOrderMain(
    		@ModelAttribute PosPurchaseOrderMain posPurchaseOrderMain) throws Exception {
        return JSON.toJSONString(posPurchaseOrderMainService.deletePosPurchaseOrderMain(posPurchaseOrderMain));
    }
	
	@ApiOperation(value="2.1.9Po原始单列表明细记录分页查询")
	@RequestMapping(value = "/selectPosPurchaseOrderDetail", method = RequestMethod.POST)
    public String selectPosPurchaseOrderDetail(
    		@ModelAttribute PosPurchaseOrderDetail posPurchaseOrderDetail, 
    		@ModelAttribute LmisPageObject pageObject) throws Exception {
		pageObject.setDefaultPage(defPageNum, defPageSize);
        return JSON.toJSONString(posPurchaseOrderDetailService.selectPosPurchaseOrderDetail(posPurchaseOrderDetail, pageObject));
    }
	
	@ApiOperation(value="2.1.9Po分仓结果汇总分页查询")
	@RequestMapping(value = "/selectPosPoImportLog", method = RequestMethod.POST)
    public String selectPosPoImportLog(
    		@ModelAttribute PosPoImportLog posPoImportLog, 
    		@ModelAttribute LmisPageObject pageObject) throws Exception {
		pageObject.setDefaultPage(defPageNum, defPageSize);
        return JSON.toJSONString(posPoImportLogService.selectPosPoImportLog(posPoImportLog, pageObject));
    }

}
