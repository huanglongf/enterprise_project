package com.lmis.setup.pageTable.service;

import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertTrue;

import java.util.ArrayList;
import java.util.List;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.test.annotation.Rollback;
import org.springframework.test.context.junit4.SpringRunner;
import org.springframework.transaction.annotation.Transactional;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.lmis.common.dynamicSql.model.DynamicSqlParam;
import com.lmis.framework.baseInfo.LmisConstant;
import com.lmis.framework.baseInfo.LmisResult;
import com.lmis.setup.pageLayout.model.SetupPageLayout;
import com.lmis.setup.pageLayout.service.SetupPageLayoutServiceInterface;
import com.lmis.setup.pageLayout.service.SetupPageLayoutServiceInterfaceTest;
import com.lmis.setup.pageTable.model.SetupPageTable;

/**
 * @ClassName: SetupPageTableMapperTest
 * @Description: TODO(这里用一句话描述这个类的作用)
 * @author Ian.Huang
 * @date 2017年12月8日 下午6:32:01
 * 
 */
@RunWith(SpringRunner.class)
@SpringBootTest(webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
public class SetupPageTableServiceTest {
	private static Log log = LogFactory.getLog(SetupPageTableServiceTest.class);

	@Autowired
	SetupPageTableServiceInterface<SetupPageTable> setupPageTableService;
	
	@Autowired
	ObjectMapper mapper;
	
	@Value("${base.page.pageNum}")
    int defPageNum;

    @Value("${base.page.pageSize}")
    int defPageSize;
    
    @Transactional  
    @Rollback(true)
    @Test
	public void testSelectSetupPageLayoutDynamic() throws Exception {
		// 测试新增查询列表
    	/*DynamicSqlParam<SetupPageTable> dynamicSqlParam = new DynamicSqlParam<SetupPageTable>();
    	dynamicSqlParam.setLayoutId("P_YMBJ_ADDTABLE_P1");
    	String jsonStr = "[{\"elementId\":\"P_YMBJ_ADDTABLE_P1_E01\",\"value\":\"C_102\"},{\"elementId\":\"P_YMBJ_ADDTABLE_P1_E02\",\"value\":\"测试列名1\"},{\"elementId\":\"P_YMBJ_ADDTABLE_P1_E03\",\"value\":\"C_S_RIKI_0_P00\"},{\"elementId\":\"P_YMBJ_ADDTABLE_P1_E04\",\"value\":\"100\"},{\"elementId\":\"P_YMBJ_ADDTABLE_P1_E05\",\"value\":\"100%\"},{\"elementId\":\"P_YMBJ_ADDTABLE_P1_E08\",\"value\":\"0\"}]";
    	dynamicSqlParam.setElements(jsonStr);
    	LmisResult<?> result = setupPageTableService.executeInsert(dynamicSqlParam);
		assertNotNull("failure - result is null", result);
		assertTrue("failure - result is not right", result.getCode().equals(LmisConstant.RESULT_CODE_SUCCESS));*/
	}
    
    @Transactional  
    @Rollback(true)
    @Test
	public void testUpdateSetupPageLayoutDynamic() throws Exception {
		// 测试修改查询列表
    	/*DynamicSqlParam<SetupPageTable> dynamicSqlParam = new DynamicSqlParam<SetupPageTable>();
    	dynamicSqlParam.setLayoutId("P_YMBJ_ADDTABLE_P1");
    	String jsonStr = "[{\"elementId\":\"P_YMBJ_ADDTABLE_P1_E01\",\"value\":\"C_101\"},{\"elementId\":\"P_YMBJ_ADDTABLE_P1_E02\",\"value\":\"测试列名1\"},{\"elementId\":\"P_YMBJ_ADDTABLE_P1_E03\",\"value\":\"C_S_RIKI_0_P00\"},{\"elementId\":\"P_YMBJ_ADDTABLE_P1_E04\",\"value\":100},{\"elementId\":\"P_YMBJ_ADDTABLE_P1_E05\",\"value\":\"100%\"},{\"elementId\":\"P_YMBJ_ADDTABLE_P1_E08\",\"value\":\"0\"}]";
    	dynamicSqlParam.setElements(jsonStr);
    	dynamicSqlParam.setId("5d5d7263-633d-11e8-9d0d-005056954f8e");
    	LmisResult<?> result = setupPageTableService.executeUpdate(dynamicSqlParam);
		assertNotNull("failure - result is null", result);
		assertTrue("failure - result is not right", result.getCode().equals(LmisConstant.RESULT_CODE_SUCCESS));*/
	}
    
    
    @Test
	public void testCheckSetupPageLayoutDynamic() throws Exception {
		// 测查看查询列表配置
    	/*DynamicSqlParam<SetupPageTable> dynamicSqlParam = new DynamicSqlParam<SetupPageTable>();
    	dynamicSqlParam.setLayoutId("P_YMBJ_ADDTABLE_P1");
    	dynamicSqlParam.setId("f43808e5-62e0-11e8-9d0d-005056954f8e");
    	LmisResult<?> result = setupPageTableService.executeSelect(dynamicSqlParam);
		assertNotNull("failure - result is null", result);
		assertTrue("failure - result is not right", result.getCode().equals(LmisConstant.RESULT_CODE_SUCCESS));*/
	}
    
    
}
