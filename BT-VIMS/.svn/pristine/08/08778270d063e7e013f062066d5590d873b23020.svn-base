<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bt.vims.dao.AddressInforMapper">
	<resultMap id="BaseResultMap" type="com.bt.vims.model.AddressInfor">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="address_code" property="addressCode" jdbcType="VARCHAR" />
		<result column="address_name" property="addressName" jdbcType="VARCHAR" />
		<result column="printer_ip" property="printerIp" jdbcType="VARCHAR" />
		<result column="remark" property="remark" jdbcType="VARCHAR" />
		<result column="is_disabled" property="isDisabled" jdbcType="INTEGER" />
		<result column="is_deleted" property="isDeleted" jdbcType="INTEGER" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
		<result column="create_by" property="createBy" jdbcType="VARCHAR" />
		<result column="update_by" property="updateBy" jdbcType="VARCHAR" />
	</resultMap>
	<!-- 查询时所用得字段 -->
	<sql id="base_cloumn_list">
		id,
		address_code,
		address_name,
		printer_ip,
		remark,
		is_disabled,
		is_deleted,
		create_time,
		update_time,
		create_by,
		update_by
	</sql>

	<!-- 插入时所用得字段值 -->
	<sql id="Create_Column_List">
		<trim prefix="(" suffix=")" suffixOverrides=",">
			address_code,
			address_name,
			printer_ip,
			remark,
			is_disabled,
			is_deleted,
			create_time,
			update_time,
			create_by,
			update_by
		</trim>
	</sql>
	
	<!-- 按条件查询的字段 -->
	<sql id="sql_where">
		<trim prefix="where" prefixOverrides="AND|OR">
			<if test="id != null">
	        	AND id = #{id, jdbcType=INTEGER}
	        </if>
	        <if test="addressCode != null and addressCode != ''">
	        	AND address_code = #{addressCode, jdbcType=VARCHAR}
	        </if>
	        <if test="addressName != null and addressName != ''">
	        	AND address_name LIKE CONCAT('%','${addressName}','%' )
	        </if>
	        <if test="printerIp != null and printerIp != ''">
	        	AND printer_ip = #{printerIp, jdbcType=VARCHAR}
	        </if>
	        <if test="remark != null and remark != ''">
	        	AND remark = #{remark, jdbcType=VARCHAR}
	        </if>
	        <if test="isDisabled != null">
	        	AND is_disabled = #{isDisabled, jdbcType=INTEGER}
	        </if>
	        <if test="isDeleted != null">
	        	AND is_deleted = #{isDeleted, jdbcType=INTEGER}
	        </if>
	        <if test="createTime != null and createTime != ''">
	        	AND create_time = #{createTime, jdbcType=TIMESTAMP}
	        </if>
	        <if test="updateTime != null and updateTime != ''">
	        	AND update_time = #{updateTime, jdbcType=TIMESTAMP}
	        </if>
	        <if test="createBy != null and createBy != ''">
	        	AND create_by = #{createBy, jdbcType=VARCHAR}
	        </if>
			<if test="updateBy != null and updateBy != ''">
	        	AND update_by = #{updateBy, jdbcType=VARCHAR}
	        </if>
		</trim>
	</sql>

	<!-- 将地址信息数据插入表中 -->
	<insert id="insertAddressInfor" parameterType="com.bt.vims.model.AddressInfor">
		INSERT INTO b_printer_info
		<include refid="Create_Column_List"></include>
			<trim prefix="VALUES (" suffix=")" suffixOverrides=",">
				#{addressCode, jdbcType==VARCHAR},
				#{addressName, jdbcType==VARCHAR},
				#{printerIp, jdbcType==VARCHAR},
				#{remark, jdbcType==VARCHAR},
				#{isDisabled, jdbcType==INTEGER},
				#{isDeleted, jdbcType==INTEGER},
				#{createTime, jdbcType==TIMESTAMP},
				#{updateTime, jdbcType==TIMESTAMP},
				#{createBy, jdbcType==VARCHAR},
				#{updateBy, jdbcType==VARCHAR}
			</trim>
	</insert>
	
	<!-- 查询地址表中所有信息 -->
	<select id="getDetailInfo" parameterType="com.bt.vims.model.AddressInfor" resultMap="BaseResultMap">
		SELECT <include refid="base_cloumn_list"></include> FROM b_printer_info <include refid="sql_where"></include>
		order by id DESC limit #{firstResult},#{maxResult}
	</select>
	
	<!-- 根据条件查找数据条数 -->
	<select id="getDetailInfoCount" parameterType="map" resultType="java.lang.Integer">
		SELECT COUNT(1) FROM b_printer_info
		<include refid="sql_where"></include>
	</select>
	
	<!-- 根据id查找数据 -->
	<select id="findSingleAddressInfor" parameterType="map" resultMap="BaseResultMap">
		SELECT <include refid="base_cloumn_list"></include> FROM b_printer_info
		<include refid="sql_where"></include> limit 0,1000
	</select>
	
	<!-- 根据地址编码查找数据 -->
	<select id="validateCode" parameterType="map" resultMap="BaseResultMap">
		SELECT <include refid="base_cloumn_list"></include> FROM b_printer_info
		<include refid="sql_where"></include> 
	</select>
	
	<!-- 所有逻辑标志位为0的地址信息 -->
	<select id="getAllAddressInfor" parameterType="map" resultMap="BaseResultMap">
		SELECT * FROM b_printer_info <include refid="sql_where"></include>
	</select>
	
	<!-- 修改地址信息 -->
	<update id="updateAddressInfor" parameterType="com.bt.vims.model.AddressInfor">
		UPDATE b_printer_info
		<trim prefix="SET" suffixOverrides=",">
	         <if test="addressCode != null and addressCode != ''">
	        	address_code = #{addressCode, jdbcType=VARCHAR},
	        </if>
	        <if test="addressName != null and addressName != ''">
	        	address_name = #{addressName, jdbcType=VARCHAR},
	        </if>
	        <if test="printerIp != null and printerIp != ''">
	        	printer_ip = #{printerIp, jdbcType=VARCHAR},
	        </if>
	        <if test="remark != null and remark != ''">
	        	remark = #{remark, jdbcType=VARCHAR},
	        </if>
	        <if test="isDisabled != null">
	        	is_disabled = #{isDisabled, jdbcType=INTEGER},
	        </if>
	        <if test="isDeleted != null">
	        	is_deleted = #{isDeleted, jdbcType=INTEGER},
	        </if>
	        <if test="updateTime != null and updateTime != ''">
	        	update_time = #{updateTime, jdbcType=TIMESTAMP},
	        </if>
			<if test="updateBy != null and updateBy != ''">
	        	update_by = #{updateBy, jdbcType=VARCHAR}
	        </if>
	    </trim>
	    <trim prefix="WHERE">
		    <if test="id!=null and id!=''">
		    	id = #{id, jdbcType=VARCHAR}
		    </if>
	    </trim>
	</update>
	
	<!-- 根据id批量删除地址信息(逻辑删除) -->
	<update id="logicDeleteAddressInfor"  parameterType="map">
		UPDATE b_printer_info
		<trim prefix="SET" suffixOverrides=",">
	        <if test="isDeleted != null">
	        	is_deleted = #{isDeleted, jdbcType=INTEGER},
	        </if>
	        <if test="updateTime != null">
	        	update_time = #{updateTime, jdbcType=TIMESTAMP},
	        </if>
	        <if test="updateBy != null">
	        	update_by = #{updateBy, jdbcType=VARCHAR}
	        </if>
	    </trim>
		WHERE id in
		<foreach collection="idLists" item="item" open="(" separator="," close=")">  
            #{item}  
         </foreach>  
	</update>
	
	<!-- 根据id批量删除地址信息(物理删除) -->
	<delete id="phyDeleteAddressInfor" parameterType="java.util.List">
		DELETE FROM b_printer_info WHERE id in
		<foreach collection="list" item="item" open="(" separator="," close=")">
			#{item}
		</foreach>
		
	</delete>
</mapper>