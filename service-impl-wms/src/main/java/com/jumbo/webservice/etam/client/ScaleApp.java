/*
 * 
 */

package com.jumbo.webservice.etam.client;

import java.net.URL;

import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

import com.jumbo.webservice.biaogan.client.base.PushExpressInfo;


/**
 * This class was generated by Apache CXF 2.2.9 Mon May 07 14:37:11 CST 2012 Generated source
 * version: 2.2.9
 * 
 */


@WebServiceClient(name = "ScaleApp", wsdlLocation = "http://112.65.156.11:81/EntApp/ScaleApp.asmx?wsdl", targetNamespace = "http://www.bpl.com.cn/")
public class ScaleApp extends Service {

    public final static URL WSDL_LOCATION;
    public final static QName SERVICE = new QName("http://www.bpl.com.cn/", "ScaleApp");
    public final static QName ScaleAppHttpPost = new QName("http://www.bpl.com.cn/", "ScaleAppHttpPost");
    public final static QName ScaleAppHttpGet = new QName("http://www.bpl.com.cn/", "ScaleAppHttpGet");
    public final static QName ScaleAppSoap12 = new QName("http://www.bpl.com.cn/", "ScaleAppSoap12");
    public final static QName ScaleAppSoap = new QName("http://www.bpl.com.cn/", "ScaleAppSoap");
    
	static {
		URL url = PushExpressInfo.class.getResource("/wsdl/etam.wsdl");
		WSDL_LOCATION = url;
	}

    public ScaleApp(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public ScaleApp(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public ScaleApp() {
        super(WSDL_LOCATION, SERVICE);
    }


    /**
     * 
     * @return returns ScaleAppHttpPost
     */
    @WebEndpoint(name = "ScaleAppHttpPost")
    public ScaleAppHttpPost getScaleAppHttpPost() {
        return super.getPort(ScaleAppHttpPost, ScaleAppHttpPost.class);
    }

    /**
     * 
     * @param features A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.
     *        Supported features not in the <code>features</code> parameter will have their default
     *        values.
     * @return returns ScaleAppHttpPost
     */
    @WebEndpoint(name = "ScaleAppHttpPost")
    public ScaleAppHttpPost getScaleAppHttpPost(WebServiceFeature... features) {
        return super.getPort(ScaleAppHttpPost, ScaleAppHttpPost.class, features);
    }

    /**
     * 
     * @return returns ScaleAppHttpGet
     */
    @WebEndpoint(name = "ScaleAppHttpGet")
    public ScaleAppHttpGet getScaleAppHttpGet() {
        return super.getPort(ScaleAppHttpGet, ScaleAppHttpGet.class);
    }

    /**
     * 
     * @param features A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.
     *        Supported features not in the <code>features</code> parameter will have their default
     *        values.
     * @return returns ScaleAppHttpGet
     */
    @WebEndpoint(name = "ScaleAppHttpGet")
    public ScaleAppHttpGet getScaleAppHttpGet(WebServiceFeature... features) {
        return super.getPort(ScaleAppHttpGet, ScaleAppHttpGet.class, features);
    }

    /**
     * 
     * @return returns ScaleAppSoap
     */
    @WebEndpoint(name = "ScaleAppSoap12")
    public ScaleAppSoap getScaleAppSoap12() {
        return super.getPort(ScaleAppSoap12, ScaleAppSoap.class);
    }

    /**
     * 
     * @param features A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.
     *        Supported features not in the <code>features</code> parameter will have their default
     *        values.
     * @return returns ScaleAppSoap
     */
    @WebEndpoint(name = "ScaleAppSoap12")
    public ScaleAppSoap getScaleAppSoap12(WebServiceFeature... features) {
        return super.getPort(ScaleAppSoap12, ScaleAppSoap.class, features);
    }

    /**
     * 
     * @return returns ScaleAppSoap
     */
    @WebEndpoint(name = "ScaleAppSoap")
    public ScaleAppSoap getScaleAppSoap() {
        return super.getPort(ScaleAppSoap, ScaleAppSoap.class);
    }

    /**
     * 
     * @param features A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.
     *        Supported features not in the <code>features</code> parameter will have their default
     *        values.
     * @return returns ScaleAppSoap
     */
    @WebEndpoint(name = "ScaleAppSoap")
    public ScaleAppSoap getScaleAppSoap(WebServiceFeature... features) {
        return super.getPort(ScaleAppSoap, ScaleAppSoap.class, features);
    }

}
