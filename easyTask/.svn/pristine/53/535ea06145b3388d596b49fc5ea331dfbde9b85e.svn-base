package com.baozun.easytask.job;

import java.io.File;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.LinkedHashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;
import javax.mail.MessagingException;

import org.apache.log4j.Logger;
import org.springframework.scheduling.annotation.Scheduled;
import org.springframework.stereotype.Component;

import com.baozun.easytask.service.SkxService;
import com.baozun.easytask.util.BigExcelExport;
import com.baozun.easytask.util.DateUtil;
import com.baozun.easytask.util.ExportExcelUtils;
import com.baozun.easytask.util.MailUtils;
import com.baozun.easytask.util.SendExcelMailUtil;

/**
 * 
 * @author Yuriy.Jiang
 *
 */
@Component
public class SKXSTOJob {
	 private static final Logger logger = Logger.getLogger(SKXSTOJob.class);
	 private final static String  path = "D:\\";//文件路径
	 private final static String email = "jinggong.li@baozun.com";//接收人邮箱
	
	 @Resource(name = "skxServiceImpl")
	 private SkxService skxServiceImpl;


	  @Scheduled(cron = "0 0 8-20/1 * * ? ")
	 //@Scheduled(cron = "0 0/10 9-17 * * ?")
	 public void run() {
		boolean flage = false;
		String fileUrl = null;
		List<String> filepath = new ArrayList<>();
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
	    String filehead = sdf.format(new Date());
		List<List<List<Object>>> list = getExeculList();//获取到数据源数据
		try {
			fileUrl = ExportExcelUtils.exportExcel(list,path+filehead+"订单发货配送报表");
			filepath.add(fileUrl);
			flage = SendExcelMailUtil.sendMail(email,filehead+"订单发货配送报表", "", filepath);
		} catch (Exception e) {
			e.printStackTrace();
		}	
	}
    
	/**
	 * 获得List数据源
	 * @return 
	 */
	private List<List<List<Object>>> getExeculList(){
		List<List<List<Object>>> list = new LinkedList<List<List<Object>>>();
		List<List<Object>> data1 = mapChangList(skxServiceImpl.job7());
		List<List<Object>> data2 = mapChangList2(skxServiceImpl.job8());
		List<List<Object>> data3 = mapChangList3(skxServiceImpl.job9());
        list.add(data1);
        list.add(data2);
        list.add(data3);
		return list;
		
	}
	
	
	//转换map1中的数据
	private List<List<Object>> mapChangList(List<Map<String, Object>> data){
		List<List<Object>> data1 = new ArrayList<List<Object>>(); 
		for(Map map : data) {
			List rowData = new ArrayList();  
            rowData.add(map.get("start_province") != null ? map.get("start_province"): "");  
            rowData.add(map.get("warehouse_name") != null ? map.get("warehouse_name"): "");
            rowData.add(map.get("store_name") != null ? map.get("store_name"): "");
            rowData.add(map.get("transport_code") != null ? map.get("transport_code"): "");
            rowData.add(map.get("order_count") != null ? map.get("order_count"): "");
            data1.add(rowData);
		}
		return data1;
	}
	
	//转换map2中的数据
	private List<List<Object>> mapChangList2(List<Map<String, Object>> data){
		List<List<Object>> data2 = new ArrayList<List<Object>>(); 
		for(Map map : data) {
			List rowData = new ArrayList();  
            rowData.add(map.get("start_province") != null ? map.get("start_province"): "");  
            rowData.add(map.get("warehouse_name") != null ? map.get("warehouse_name"): "");
            rowData.add(map.get("store_name") != null ? map.get("store_name"): "");
            rowData.add(map.get("transport_code") != null ? map.get("transport_code"): "");
            rowData.add(map.get("province") != null ? map.get("province"): "");
            rowData.add(map.get("city") != null ? map.get("city"): "");
            rowData.add(map.get("order_count") != null ? map.get("order_count"): "");
            data2.add(rowData);
		}
		return data2;
	}
	
	//转换map3中的数据
	private List<List<Object>> mapChangList3(List<Map<String, Object>> data){
		List<List<Object>> data3 = new ArrayList<List<Object>>(); 
		for(Map map : data) {
			List rowData = new ArrayList();  
            rowData.add(map.get("transport_time") != null ? map.get("transport_time"): "");  
            rowData.add(map.get("transport_hour") != null ? map.get("transport_hour"): "");
            rowData.add(map.get("start_province") != null ? map.get("start_province"): "");
            rowData.add(map.get("warehouse_name") != null ? map.get("warehouse_name"): "");
            rowData.add(map.get("store_name") != null ? map.get("store_name"): "");
            rowData.add(map.get("transport_code") != null ? map.get("transport_code"): "");
            rowData.add(map.get("order_count") != null ? map.get("order_count"): "");
            data3.add(rowData);
		}
		return data3;
	}

}
